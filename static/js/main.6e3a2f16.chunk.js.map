{"version":3,"sources":["serviceWorker.js","index.js","assets/img/logo.png","components/App.js","components/Navbar.js","assets/img/metamask.svg","assets/img/Binance-Icon-Logo.wine.svg","assets/img/avalanche-avax-logo.png","assets/img/polygon-logo.svg","assets/img/file_upload_hero.svg","assets/img/file_upload.svg","components/HeroSection.js","components/Main.js","components/helpers.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","ipfs","require","ipfsClient","host","port","protocol","Component","componentWillMount","loadWeb3","loadBlockchainData","ethereum","web3","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","net","getId","networkId","networkData","DStorage","networks","dstorage","Contract","abi","address","methods","fileCount","call","filesCount","i","files","file","state","constructor","props","super","captureFile","event","preventDefault","target","reader","FileReader","readAsArrayBuffer","onloadend","this","buffer","Buffer","result","type","name","console","log","uploadFile","description","add","error","size","loading","hash","send","from","on","reload","e","bind","id","className","Navbar","src","logo","alt","href","style","backgroundColor","border","color","metamask","marginLeft","Binance","avalanche","width","polygon","rel","substring","height","Identicon","toString","onClick","querySelector","classList","toggle","HeroSection","hero","Main","onSubmit","fileDescription","value","ref","input","placeholder","rows","required","display","onChange","right_img","role","fontSize","scope","class","map","key","fileId","fileName","fileType","bytes","parseInt","Math","floor","round","pow","convertBytes","fileSize","moment","unix","uploadTime","format","uploader","fileHash"],"mappings":"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","file":"static/js/main.6e3a2f16.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.2410baa7.png\";","import DStorage from '../abis/DStorage.json';\nimport React, { Component } from 'react';\nimport Navbar from './Navbar';\nimport Main from './Main';\nimport Web3 from 'web3';\nimport './App.css';\nimport '../assets/styles/home.css';\n\nconst ipfsClient = require('ipfs-http-client');\nconst ipfs = ipfsClient({\n\thost: 'ipfs.infura.io',\n\tport: 5001,\n\tprotocol: 'https',\n}); // leaving out the arguments will default to these values\n\nclass App extends Component {\n\tasync componentWillMount() {\n\t\tawait this.loadWeb3();\n\t\tawait this.loadBlockchainData();\n\t}\n\n\tasync loadWeb3() {\n\t\tif (window.ethereum) {\n\t\t\twindow.web3 = new Web3(window.ethereum);\n\t\t\tawait window.ethereum.enable();\n\t\t} else if (window.web3) {\n\t\t\twindow.web3 = new Web3(window.web3.currentProvider);\n\t\t} else {\n\t\t\twindow.alert(\n\t\t\t\t'Non-Ethereum browser detected. You should consider trying MetaMask!'\n\t\t\t);\n\t\t}\n\t}\n\n\tasync loadBlockchainData() {\n\t\tconst web3 = window.web3;\n\t\t// Load account\n\t\tconst accounts = await web3.eth.getAccounts();\n\t\tthis.setState({ account: accounts[0] });\n\t\t// Network ID\n\t\tconst networkId = await web3.eth.net.getId();\n\t\tconst networkData = DStorage.networks[networkId];\n\t\tif (networkData) {\n\t\t\t// Assign contract\n\t\t\tconst dstorage = new web3.eth.Contract(\n\t\t\t\tDStorage.abi,\n\t\t\t\tnetworkData.address\n\t\t\t);\n\t\t\tthis.setState({ dstorage });\n\t\t\t// Get files amount\n\t\t\tconst filesCount = await dstorage.methods.fileCount().call();\n\t\t\tthis.setState({ filesCount });\n\t\t\t// Load files&sort by the newest\n\t\t\tfor (var i = filesCount; i >= 1; i--) {\n\t\t\t\tconst file = await dstorage.methods.files(i).call();\n\t\t\t\tthis.setState({\n\t\t\t\t\tfiles: [...this.state.files, file],\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\twindow.alert('Please Connect to the BSC network.');\n\t\t}\n\t}\n\n\t// Get file from user\n\tcaptureFile = (event) => {\n\t\tevent.preventDefault();\n\n\t\tconst file = event.target.files[0];\n\t\tconst reader = new window.FileReader();\n\n\t\treader.readAsArrayBuffer(file);\n\t\treader.onloadend = () => {\n\t\t\tthis.setState({\n\t\t\t\tbuffer: Buffer(reader.result),\n\t\t\t\ttype: file.type,\n\t\t\t\tname: file.name,\n\t\t\t});\n\t\t\tconsole.log('buffer', this.state.buffer);\n\t\t};\n\t};\n\n\tuploadFile = (description) => {\n\t\tconsole.log('Submitting file to IPFS...');\n\n\t\t// Add file to the IPFS\n\t\tipfs.add(this.state.buffer, (error, result) => {\n\t\t\tconsole.log('IPFS result', result.size);\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.setState({ loading: true });\n\t\t\t// Assign value for the file without extension\n\t\t\tif (this.state.type === '') {\n\t\t\t\tthis.setState({ type: 'none' });\n\t\t\t}\n\t\t\tthis.state.dstorage.methods\n\t\t\t\t.uploadFile(\n\t\t\t\t\tresult[0].hash,\n\t\t\t\t\tresult[0].size,\n\t\t\t\t\tthis.state.type,\n\t\t\t\t\tthis.state.name,\n\t\t\t\t\tdescription\n\t\t\t\t)\n\t\t\t\t.send({ from: this.state.account })\n\t\t\t\t.on('transactionHash', (hash) => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\ttype: null,\n\t\t\t\t\t\tname: null,\n\t\t\t\t\t});\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t})\n\t\t\t\t.on('error', (e) => {\n\t\t\t\t\twindow.alert('Error');\n\t\t\t\t\tthis.setState({ loading: false });\n\t\t\t\t});\n\t\t});\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\taccount: '',\n\t\t\tdstorage: null,\n\t\t\tfiles: [],\n\t\t\tloading: false,\n\t\t\ttype: null,\n\t\t\tname: null,\n\t\t};\n\t\tthis.uploadFile = this.uploadFile.bind(this);\n\t\tthis.captureFile = this.captureFile.bind(this);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Navbar account={this.state.account} />\n\t\t\t\t{this.state.loading ? (\n\t\t\t\t\t<div id='loader' className='text-center mt-5'>\n\t\t\t\t\t\t<p>Loading...</p>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<Main\n\t\t\t\t\t\tfiles={this.state.files}\n\t\t\t\t\t\tcaptureFile={this.captureFile}\n\t\t\t\t\t\tuploadFile={this.uploadFile}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport Identicon from 'identicon.js';\nimport logo from '../assets/img/logo.png';\nimport metamask from '../assets/img/metamask.svg';\nimport Binance from '../assets/img/Binance-Icon-Logo.wine.svg';\nimport avalanche from '../assets/img/avalanche-avax-logo.png';\nimport polygon from '../assets/img/polygon-logo.svg';\n\nclass Navbar extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className='header'>\n\t\t\t\t<div className='header-content'>\n\t\t\t\t\t<img src={logo} alt='' />\n\t\t\t\t\t<nav>\n\t\t\t\t\t\t<a href='#upload-section' className='btn'>\n\t\t\t\t\t\t\t<li>Upload</li>\n\t\t\t\t\t\t</a>\n\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref='#metamask-login'\n\t\t\t\t\t\t\tclassName='btn'\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackgroundColor: '#fff',\n\t\t\t\t\t\t\t\tborder: '1px solid #EC1A56',\n\t\t\t\t\t\t\t\tcolor: '#EC1A56',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img src={metamask} alt='' />\n\t\t\t\t\t\t\t<li style={{ marginLeft: 10 }}>Metamask</li>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<li style={{ marginLeft: 0 }}>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={Binance}\n\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\tstyle={{ marginLeft: 0 }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t<li style={{ marginLeft: 0 }}>\n\t\t\t\t\t\t\t<img src={avalanche} alt='' style={{ width: 40 }} />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li style={{ marginLeft: 0 }}>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={polygon}\n\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\tstyle={{ width: 110, marginLeft: '1.5rem' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<small id='account'>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t\tclassName='text-white'\n\t\t\t\t\t\t\t\t\trel='noopener noreferrer'\n\t\t\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\t\t\t'https://etherscan.io/address/' +\n\t\t\t\t\t\t\t\t\t\tthis.props.account\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{this.props.account.substring(0, 6)}\n\t\t\t\t\t\t\t\t\t{this.props.account.substring(38, 42)}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</small>\n\t\t\t\t\t\t\t{this.props.account ? (\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t\tclassName='ml-2'\n\t\t\t\t\t\t\t\t\twidth='30'\n\t\t\t\t\t\t\t\t\theight='30'\n\t\t\t\t\t\t\t\t\tsrc={`data:image/png;base64,${new Identicon(\n\t\t\t\t\t\t\t\t\t\tthis.props.account,\n\t\t\t\t\t\t\t\t\t\t30\n\t\t\t\t\t\t\t\t\t).toString()}`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<span></span>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</nav>\n\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='burger-icon'\n\t\t\t\t\t\tonClick={(e) =>\n\t\t\t\t\t\t\tdocument\n\t\t\t\t\t\t\t\t.querySelector('.header-content nav')\n\t\t\t\t\t\t\t\t.classList.toggle('active')\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className='fas fa-bars'></i>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Navbar;\n","module.exports = __webpack_public_path__ + \"static/media/metamask.a0103549.svg\";","module.exports = __webpack_public_path__ + \"static/media/Binance-Icon-Logo.wine.d5322ee6.svg\";","module.exports = __webpack_public_path__ + \"static/media/avalanche-avax-logo.2565884a.png\";","module.exports = __webpack_public_path__ + \"static/media/polygon-logo.9d390282.svg\";","module.exports = __webpack_public_path__ + \"static/media/file_upload_hero.50ef9f2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/file_upload.7df580b5.svg\";","import React from 'react';\nimport hero from '../assets/img/file_upload_hero.svg';\nexport default function HeroSection() {\n\treturn (\n\t\t<div className='Hero '>\n\t\t\t<div className='content w1200'>\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Decentralized Data</h1>\n\t\t\t\t\t<h2>File-Sharing Dapp</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tStore and share your data/files in Deliverer IPFS\n\t\t\t\t\t\tBlockchain to avoid a single point of failure and\n\t\t\t\t\t\tcensorship.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<img src={hero} alt='' />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React, { Component } from 'react';\nimport { convertBytes } from './helpers';\nimport moment from 'moment';\nimport HeroSection from './HeroSection';\nimport right_img from '../assets/img/file_upload.svg';\nimport logo from '../assets/img/logo.png';\n\nclass Main extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{/* hero section start */}\n\t\t\t\t<HeroSection />\n\t\t\t\t{/* hero section end */}\n\n\t\t\t\t{/* upload section start */}\n\t\t\t\t<div className='form-wrapper-area w-1200' id='upload-section'>\n\t\t\t\t\t<div className='FormWrapper w1200'>\n\t\t\t\t\t\t<div className='left_side'>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={logo}\n\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\tclassName='logo mx-2 d-block'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<form\n\t\t\t\t\t\t\t\tonSubmit={(event) => {\n\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\tconst description =\n\t\t\t\t\t\t\t\t\t\tthis.fileDescription.value;\n\t\t\t\t\t\t\t\t\tthis.props.uploadFile(description);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<h1 className='mx-2'>\n\t\t\t\t\t\t\t\t\tTry us now <br /> Upload Your File\n\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t\t<p className='mx-2'>Upload Your File</p>\n\n\t\t\t\t\t\t\t\t<div className='form-group my-3 mx-2'>\n\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\tid='fileDescription'\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tref={(input) => {\n\t\t\t\t\t\t\t\t\t\t\tthis.fileDescription = input;\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\t\tplaceholder='Description...'\n\t\t\t\t\t\t\t\t\t\trows='3'\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='file'\n\t\t\t\t\t\t\t\t\tid='upload_file'\n\t\t\t\t\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t\t\t\t\t\tonChange={this.props.captureFile}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tid='upload_file_label'\n\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\tclassName='btn btn-lg bg-danger navbar-dark btn-block text-white'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tPlease Select File\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='right_side'>\n\t\t\t\t\t\t\t<img src={right_img} alt='' />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{/* upload section end */}\n\n\t\t\t\t{/* main code */}\n\t\t\t\t<div className='container-fluid my-5 text-center'>\n\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<main role='main' className='col-lg-9 mx-auto'>\n\t\t\t\t\t\t\t<div className='content'>\n\t\t\t\t\t\t\t\t{/* table portion start from here */}\n\t\t\t\t\t\t\t\t<div className='bg-dark p-3'>\n\t\t\t\t\t\t\t\t\t<div className='table-responsive'>\n\t\t\t\t\t\t\t\t\t\t<table className='table table-white table-striped table-bordered table-hover mb-0'>\n\t\t\t\t\t\t\t\t\t\t\t<thead style={{ fontSize: '15px' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<tr className='bg-danger navbar-dark text-white'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col'>id</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col'>name</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdescription\n\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col'>type</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col'>size</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col'>date</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tuploader/view\n\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<th scope='col'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thash/view/get\n\t\t\t\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t</thead>\n\n\t\t\t\t\t\t\t\t\t\t\t{/* static test table data */}\n\t\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t\t<tr class='text-white'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>1</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>Test</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>Test Desc</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>Test</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>10MB</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>3/7</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>Yes</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>Yes</td>\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t</tbody>\n\n\t\t\t\t\t\t\t\t\t\t\t{this.props.files.map(\n\t\t\t\t\t\t\t\t\t\t\t\t(file, key) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize:\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'12px',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfile.fileId\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfile.fileName\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfile.fileDescription\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfile.fileType\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{convertBytes(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfile.fileSize\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{moment\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.unix(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfile.uploadTime\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.format(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'h:mm:ss A M/D/Y'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'https://etherscan.io/address/' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfile.uploader\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trel='noopener noreferrer'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{file.uploader.substring(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t10\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'https://ipfs.infura.io/ipfs/' +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfile.fileHash\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trel='noopener noreferrer'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{file.fileHash.substring(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t10\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</main>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Main;\n","export function convertBytes(bytes) {\r\n   var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n   if (bytes === 0) return '0 Byte';\r\n   var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n   return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n}"],"sourceRoot":""}